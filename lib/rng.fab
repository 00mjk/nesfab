// RNG means random number generator.
// This file contains code for generating random numbers.

vars /rng
    U[2] rng_state = U[2](1, 1)

asm fn rand() U
: vars /rng
: data
    vars foo
    default
        lda &rng_state+0
        asl
        rol &rng_state+1
        bcc done_xor_0
        eor #$2D // apply XOR feedback whenever a 1 bit is shifted out
    label done_xor_0
        asl
        rol &rng_state+1
        bcc done_xor_1
        eor #$2D
    label done_xor_1
        sta &rng_state+0
        sta &return
        rts

asm fn ceil_mask(U num) U
: vars
: data
    default
        ldx #$FF
        lda num
    label loop
        inx
        lsr
        bne loop
        lda table, x
        sta &return
        rts
    label table
        U[8](%0, %1, %11, %111, %1111, %11111, %111111, %1111111, %11111111)

fn randb(U bound) U
    U mask = ceil_mask(bound)
    U result
    do
        result = rand() & mask
    while result > max
    return result
